# Copyright (c) 2010-2023 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided
# with the distribution.
#
# 3. The name of the author may not be used to endorse or promote
# products derived from this software without specific prior written
# permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# *******************************************************************
# ***                  strclear CMakeLists.txt                    ***
# *******************************************************************

# Minimum required version of CMake
cmake_minimum_required(VERSION 3.18)

# set CMake project name
project(STRCLEAR)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

include_directories(
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
  )

if(NOT DEFINED BIN_DIR)
  set(BIN_DIR bin)
endif(NOT DEFINED BIN_DIR)

include(CheckCXXCompilerFlag)
check_cxx_compiler_flag(-O3 O3_COMPILER_FLAG)

include(CheckIncludeFiles)
check_include_files(sys/mman.h HAVE_SYS_MMAN_H)
if (HAVE_SYS_MMAN_H)
  add_definitions(-DHAVE_SYS_MMAN_H=1)
endif (HAVE_SYS_MMAN_H)
check_include_files(sys/stat.h HAVE_SYS_STAT_H)
if (HAVE_SYS_STAT_H)
  add_definitions(-DHAVE_SYS_STAT_H=1)
endif (HAVE_SYS_STAT_H)
check_include_files(sys/unistd.h HAVE_UNISTD_H)
if (HAVE_UNISTD_H)
  add_definitions(-DHAVE_UNISTD_H=1)
endif (HAVE_UNISTD_H)
check_include_files(sys/fcntl.h HAVE_FCNTL_H)
if (HAVE_FCNTL_H)
  add_definitions(-DHAVE_FCNTL_H=1)
endif (HAVE_FCNTL_H)

add_executable(strclear strclear.cpp MappedFile.cpp strnstr.c)
if (O3_COMPILER_FLAG)
  # If we have the O3 flag, use it
  target_compile_options(strclear PRIVATE "-O3")
endif (O3_COMPILER_FLAG)
install(TARGETS strclear DESTINATION ${BIN_DIR})

if(COMMAND CMAKEFILES)
  CMAKEFILES(
    CMakeLists.txt
    strclear.cpp
    )
endif()

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8

